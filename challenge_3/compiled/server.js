const express = require('express');
const app = express();
const port = 4568;

const parser = require('body-parser');
const morgan = require('morgan');
const path = require('path');

const mysql = require('mysql');

app.listen(port, () => {
  console.log(`Server is listening on port ${port}`);
});

app.use(parser.json());
app.use(parser.urlencoded());

app.use(express.static('public'));

// Establish connection with database using mysql.createConnection

const db = mysql.createConnection({
  host: 'localhost',
  user: 'trevor',
  password: 'flamingo',
  database: 'shoppingcart'
});

db.connect();

// Define model functions for interactions with DB
const postUsers = (userInfo, callback) => {
  let queryString = 'INSERT INTO users VALUES(0, ?, ?, ?)';
  let queryArgs = [];

  db.query(queryString, queryArgs, (err, results) => {
    if (err) {
      callback(err);
    }
    console.log('Query inserted successfully, gave back these results => ', results);
  });
};

// Set up routes to appropriate functions
app.post('/users', (req, res) => {
  console.log('Logging request from client => ', req.body);
});

app.post('/addresses', (req, res) => {});

app.post('/cards', (req, res) => {});

// Set up DBs in separate file
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NlcnZlci5qcyJdLCJuYW1lcyI6WyJleHByZXNzIiwicmVxdWlyZSIsImFwcCIsInBvcnQiLCJwYXJzZXIiLCJtb3JnYW4iLCJwYXRoIiwibXlzcWwiLCJsaXN0ZW4iLCJjb25zb2xlIiwibG9nIiwidXNlIiwianNvbiIsInVybGVuY29kZWQiLCJzdGF0aWMiLCJkYiIsImNyZWF0ZUNvbm5lY3Rpb24iLCJob3N0IiwidXNlciIsInBhc3N3b3JkIiwiZGF0YWJhc2UiLCJjb25uZWN0IiwicG9zdFVzZXJzIiwidXNlckluZm8iLCJjYWxsYmFjayIsInF1ZXJ5U3RyaW5nIiwicXVlcnlBcmdzIiwicXVlcnkiLCJlcnIiLCJyZXN1bHRzIiwicG9zdCIsInJlcSIsInJlcyIsImJvZHkiXSwibWFwcGluZ3MiOiJBQUFBLE1BQU1BLFVBQVVDLFFBQVEsU0FBUixDQUFoQjtBQUNBLE1BQU1DLE1BQU1GLFNBQVo7QUFDQSxNQUFNRyxPQUFPLElBQWI7O0FBRUEsTUFBTUMsU0FBU0gsUUFBUSxhQUFSLENBQWY7QUFDQSxNQUFNSSxTQUFTSixRQUFRLFFBQVIsQ0FBZjtBQUNBLE1BQU1LLE9BQU9MLFFBQVEsTUFBUixDQUFiOztBQUVBLE1BQU1NLFFBQVFOLFFBQVEsT0FBUixDQUFkOztBQUVBQyxJQUFJTSxNQUFKLENBQVdMLElBQVgsRUFBaUIsTUFBTTtBQUFDTSxVQUFRQyxHQUFSLENBQWEsK0JBQThCUCxJQUFLLEVBQWhEO0FBQW1ELENBQTNFOztBQUVBRCxJQUFJUyxHQUFKLENBQVFQLE9BQU9RLElBQVAsRUFBUjtBQUNBVixJQUFJUyxHQUFKLENBQVFQLE9BQU9TLFVBQVAsRUFBUjs7QUFFQVgsSUFBSVMsR0FBSixDQUFRWCxRQUFRYyxNQUFSLENBQWUsUUFBZixDQUFSOztBQUVBOztBQUVBLE1BQU1DLEtBQUtSLE1BQU1TLGdCQUFOLENBQXVCO0FBQ2hDQyxRQUFNLFdBRDBCO0FBRWhDQyxRQUFNLFFBRjBCO0FBR2hDQyxZQUFVLFVBSHNCO0FBSWhDQyxZQUFVO0FBSnNCLENBQXZCLENBQVg7O0FBT0FMLEdBQUdNLE9BQUg7O0FBRUE7QUFDQSxNQUFNQyxZQUFZLENBQUNDLFFBQUQsRUFBV0MsUUFBWCxLQUF3QjtBQUN4QyxNQUFJQyxjQUFjLHNDQUFsQjtBQUNBLE1BQUlDLFlBQVksRUFBaEI7O0FBRUFYLEtBQUdZLEtBQUgsQ0FBU0YsV0FBVCxFQUFzQkMsU0FBdEIsRUFBaUMsQ0FBQ0UsR0FBRCxFQUFNQyxPQUFOLEtBQWtCO0FBQ2pELFFBQUlELEdBQUosRUFBUztBQUNQSixlQUFTSSxHQUFUO0FBQ0Q7QUFDRG5CLFlBQVFDLEdBQVIsQ0FBWSwwREFBWixFQUF3RW1CLE9BQXhFO0FBQ0QsR0FMRDtBQU9ELENBWEQ7O0FBZ0JBO0FBQ0EzQixJQUFJNEIsSUFBSixDQUFTLFFBQVQsRUFBbUIsQ0FBQ0MsR0FBRCxFQUFNQyxHQUFOLEtBQWM7QUFDL0J2QixVQUFRQyxHQUFSLENBQVksaUNBQVosRUFBK0NxQixJQUFJRSxJQUFuRDtBQUVELENBSEQ7O0FBS0EvQixJQUFJNEIsSUFBSixDQUFTLFlBQVQsRUFBdUIsQ0FBQ0MsR0FBRCxFQUFNQyxHQUFOLEtBQWMsQ0FBRSxDQUF2Qzs7QUFFQTlCLElBQUk0QixJQUFKLENBQVMsUUFBVCxFQUFtQixDQUFDQyxHQUFELEVBQU1DLEdBQU4sS0FBYyxDQUFFLENBQW5DOztBQUtBIiwiZmlsZSI6InNlcnZlci5qcyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGV4cHJlc3MgPSByZXF1aXJlKCdleHByZXNzJyk7XG5jb25zdCBhcHAgPSBleHByZXNzKCk7XG5jb25zdCBwb3J0ID0gNDU2ODtcblxuY29uc3QgcGFyc2VyID0gcmVxdWlyZSgnYm9keS1wYXJzZXInKTtcbmNvbnN0IG1vcmdhbiA9IHJlcXVpcmUoJ21vcmdhbicpO1xuY29uc3QgcGF0aCA9IHJlcXVpcmUoJ3BhdGgnKTtcblxuY29uc3QgbXlzcWwgPSByZXF1aXJlKCdteXNxbCcpO1xuXG5hcHAubGlzdGVuKHBvcnQsICgpID0+IHtjb25zb2xlLmxvZyhgU2VydmVyIGlzIGxpc3RlbmluZyBvbiBwb3J0ICR7cG9ydH1gKX0pO1xuXG5hcHAudXNlKHBhcnNlci5qc29uKCkpO1xuYXBwLnVzZShwYXJzZXIudXJsZW5jb2RlZCgpKTtcblxuYXBwLnVzZShleHByZXNzLnN0YXRpYygncHVibGljJykpO1xuXG4vLyBFc3RhYmxpc2ggY29ubmVjdGlvbiB3aXRoIGRhdGFiYXNlIHVzaW5nIG15c3FsLmNyZWF0ZUNvbm5lY3Rpb25cblxuY29uc3QgZGIgPSBteXNxbC5jcmVhdGVDb25uZWN0aW9uKHtcbiAgaG9zdDogJ2xvY2FsaG9zdCcsXG4gIHVzZXI6ICd0cmV2b3InLFxuICBwYXNzd29yZDogJ2ZsYW1pbmdvJyxcbiAgZGF0YWJhc2U6ICdzaG9wcGluZ2NhcnQnXG59KTtcblxuZGIuY29ubmVjdCgpO1xuXG4vLyBEZWZpbmUgbW9kZWwgZnVuY3Rpb25zIGZvciBpbnRlcmFjdGlvbnMgd2l0aCBEQlxuY29uc3QgcG9zdFVzZXJzID0gKHVzZXJJbmZvLCBjYWxsYmFjaykgPT4ge1xuICBsZXQgcXVlcnlTdHJpbmcgPSAnSU5TRVJUIElOVE8gdXNlcnMgVkFMVUVTKDAsID8sID8sID8pJztcbiAgbGV0IHF1ZXJ5QXJncyA9IFtdO1xuXG4gIGRiLnF1ZXJ5KHF1ZXJ5U3RyaW5nLCBxdWVyeUFyZ3MsIChlcnIsIHJlc3VsdHMpID0+IHtcbiAgICBpZiAoZXJyKSB7XG4gICAgICBjYWxsYmFjayhlcnIpO1xuICAgIH1cbiAgICBjb25zb2xlLmxvZygnUXVlcnkgaW5zZXJ0ZWQgc3VjY2Vzc2Z1bGx5LCBnYXZlIGJhY2sgdGhlc2UgcmVzdWx0cyA9PiAnLCByZXN1bHRzKTtcbiAgfSk7XG5cbn07XG5cblxuXG5cbi8vIFNldCB1cCByb3V0ZXMgdG8gYXBwcm9wcmlhdGUgZnVuY3Rpb25zXG5hcHAucG9zdCgnL3VzZXJzJywgKHJlcSwgcmVzKSA9PiB7XG4gIGNvbnNvbGUubG9nKCdMb2dnaW5nIHJlcXVlc3QgZnJvbSBjbGllbnQgPT4gJywgcmVxLmJvZHkpO1xuXG59KTtcblxuYXBwLnBvc3QoJy9hZGRyZXNzZXMnLCAocmVxLCByZXMpID0+IHt9KTtcblxuYXBwLnBvc3QoJy9jYXJkcycsIChyZXEsIHJlcykgPT4ge30pO1xuXG5cblxuXG4vLyBTZXQgdXAgREJzIGluIHNlcGFyYXRlIGZpbGVcblxuXG5cblxuXG5cbiJdfQ==